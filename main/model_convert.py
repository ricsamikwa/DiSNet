import torch
from torchsummary import summary
import sys
import os
o_path = os.getcwd()
sys.path.append(o_path)
from models.model_vgg16 import VGG16 as vgg
vgg16 = vgg(40)

for name,parameters in vgg16.named_parameters():
    print(name,':',parameters.size())

model_dict = vgg16.state_dict()
print(model_dict.keys())


    
print(".................")

Vgg_pretrined = torch.hub.load('pytorch/vision:v0.9.0', 'vgg16_bn', pretrained=True)
for name,parameters in Vgg_pretrined.named_parameters():
    print(name,':',parameters.size())

model_dict = Vgg_pretrined.state_dict()
print(model_dict.keys())

#update
model_path = "/home/eric/.cache/torch/hub/checkpoints/vgg16_bn-6c64b313.pth"

dict = torch.load(model_path)

dict['conv_layers.0.0.weight'] = dict.pop('features.0.weight')
dict['conv_layers.0.0.bias'] = dict.pop('features.0.bias')
dict['conv_layers.0.1.weight'] = dict.pop('features.1.weight')
dict['conv_layers.0.1.bias']= dict.pop('features.1.bias')
dict['conv_layers.0.1.running_mean'] = dict.pop('features.1.running_mean')
dict['conv_layers.0.1.running_var']= dict.pop('features.1.running_var')
dict['conv_layers.1.0.weight'] = dict.pop('features.3.weight')
dict['conv_layers.1.0.bias']  = dict.pop('features.3.bias')
dict['conv_layers.1.1.weight'] = dict.pop('features.4.weight')
dict['conv_layers.1.1.bias']  = dict.pop('features.4.bias')
dict['conv_layers.1.1.running_mean'] = dict.pop('features.4.running_mean')
dict['conv_layers.1.1.running_var']= dict.pop('features.4.running_var')
dict['conv_layers.3.0.weight'] = dict.pop('features.7.weight')
dict['conv_layers.3.0.bias']  = dict.pop('features.7.bias')
dict['conv_layers.3.1.weight'] = dict.pop('features.8.weight')
dict['conv_layers.3.1.bias']  = dict.pop('features.8.bias')
dict['conv_layers.3.1.running_mean'] = dict.pop('features.8.running_mean')
dict['conv_layers.3.1.running_var']= dict.pop('features.8.running_var')
dict['conv_layers.4.0.weight'] = dict.pop('features.10.weight')
dict['conv_layers.4.0.bias'] = dict.pop('features.10.bias')
dict['conv_layers.4.1.weight'] = dict.pop('features.11.weight')
dict['conv_layers.4.1.bias'] = dict.pop('features.11.bias')
dict['conv_layers.4.1.running_mean'] = dict.pop('features.11.running_mean')
dict['conv_layers.4.1.running_var']= dict.pop('features.11.running_var')
dict['conv_layers.6.0.weight'] = dict.pop('features.14.weight')
dict['conv_layers.6.0.bias'] = dict.pop('features.14.bias')
dict['conv_layers.6.1.weight'] = dict.pop('features.15.weight')
dict['conv_layers.6.1.bias'] = dict.pop('features.15.bias')
dict['conv_layers.6.1.running_mean'] = dict.pop('features.15.running_mean')
dict['conv_layers.6.1.running_var']= dict.pop('features.15.running_var')
dict['conv_layers.7.0.weight'] = dict.pop('features.17.weight')
dict['conv_layers.7.0.bias']= dict.pop('features.17.bias')
dict['conv_layers.7.1.weight'] = dict.pop('features.18.weight')
dict['conv_layers.7.1.bias'] = dict.pop('features.18.bias')
dict['conv_layers.7.1.running_mean'] = dict.pop('features.18.running_mean')
dict['conv_layers.7.1.running_var']= dict.pop('features.18.running_var')
dict['conv_layers.8.0.weight'] = dict.pop('features.20.weight')
dict['conv_layers.8.0.bias'] = dict.pop('features.20.bias')
dict['conv_layers.8.1.weight'] = dict.pop('features.21.weight')
dict['conv_layers.8.1.bias'] = dict.pop('features.21.bias')
dict['conv_layers.8.1.running_mean'] = dict.pop('features.21.running_mean')
dict['conv_layers.8.1.running_var']= dict.pop('features.21.running_var')
dict['conv_layers.10.0.weight'] = dict.pop('features.24.weight')
dict['conv_layers.10.0.bias']= dict.pop('features.24.bias')
dict['conv_layers.10.1.weight'] = dict.pop('features.25.weight')
dict['conv_layers.10.1.bias'] = dict.pop('features.25.bias')
dict['conv_layers.10.1.running_mean'] = dict.pop('features.25.running_mean')
dict['conv_layers.10.1.running_var']= dict.pop('features.25.running_var')
dict['conv_layers.11.0.weight'] = dict.pop('features.27.weight')
dict['conv_layers.11.0.bias'] = dict.pop('features.27.bias')
dict['conv_layers.11.1.weight'] = dict.pop('features.28.weight')
dict['conv_layers.11.1.bias'] = dict.pop('features.28.bias')
dict['conv_layers.11.1.running_mean'] = dict.pop('features.28.running_mean')
dict['conv_layers.11.1.running_var']= dict.pop('features.28.running_var')
dict['conv_layers.12.0.weight'] = dict.pop('features.30.weight')
dict['conv_layers.12.0.bias'] = dict.pop('features.30.bias')
dict['conv_layers.12.1.weight'] = dict.pop('features.31.weight')
dict['conv_layers.12.1.bias'] = dict.pop('features.31.bias')
dict['conv_layers.12.1.running_mean'] = dict.pop('features.31.running_mean')
dict['conv_layers.12.1.running_var']= dict.pop('features.31.running_var')
dict['conv_layers.14.0.weight'] = dict.pop('features.34.weight')
dict['conv_layers.14.0.bias']= dict.pop('features.34.bias')
dict['conv_layers.14.1.weight'] = dict.pop('features.35.weight')
dict['conv_layers.14.1.bias'] = dict.pop('features.35.bias')
dict['conv_layers.14.1.running_mean'] = dict.pop('features.35.running_mean')
dict['conv_layers.14.1.running_var']= dict.pop('features.35.running_var')
dict['conv_layers.15.0.weight'] = dict.pop('features.37.weight')
dict['conv_layers.15.0.bias'] = dict.pop('features.37.bias')
dict['conv_layers.15.1.weight'] = dict.pop('features.38.weight')
dict['conv_layers.15.1.bias'] = dict.pop('features.38.bias')
dict['conv_layers.15.1.running_mean'] = dict.pop('features.38.running_mean')
dict['conv_layers.15.1.running_var']= dict.pop('features.38.running_var')
dict['conv_layers.16.0.weight'] = dict.pop('features.40.weight')
dict['conv_layers.16.0.bias'] = dict.pop('features.40.bias')
dict['conv_layers.16.1.weight'] = dict.pop('features.41.weight')
dict['conv_layers.16.1.bias'] = dict.pop('features.41.bias')
dict['conv_layers.16.1.running_mean'] = dict.pop('features.41.running_mean')
dict['conv_layers.16.1.running_var']= dict.pop('features.41.running_var')
dict['layer6.0.weight'] = dict.pop('classifier.0.weight')
dict['layer6.0.bias'] = dict.pop('classifier.0.bias')
dict['layer7.0.weight'] = dict.pop('classifier.3.weight')
dict['layer7.0.bias'] = dict.pop('classifier.3.bias')
dict['layer8.weight'] = dict.pop('classifier.6.weight')
dict['layer8.bias'] = dict.pop('classifier.6.bias')


torch.save(dict, 'main/vgg16-modify.pth')